
#user  nobody;
worker_processes  1;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    passenger_root /usr/local/rvm/gems/ruby-2.0.0-p247/gems/passenger-4.0.10;
    passenger_ruby /usr/local/rvm/wrappers/ruby-2.0.0-p247/ruby;

    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;


        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
  
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}

#server {
#    listen          80 default_server;

#    index           index.html;
#    root            /Users/stephenmccurry/Documents/workspace/invtr.dev/public_html/app ;
#}

	server {
    	   listen       8080;
           server_name template.invtr.dev;

           root /Users/stephenmccurry/Documents/workspace/invtr/template/public;

           passenger_enabled on;

           location / {
               proxy_set_header Host $host;
               proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
               proxy_set_header X-Forwarded-Proto http;
               proxy_redirect off;
			   # proxy_pass http://127.0.0.1:3000;
			   proxy_pass http://localhost:20559;
           }

           location ~* .(eot|ttf|woff)$ {
               add_header Access-Control-Allow-Origin *;
           }
	}

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    server {
        	listen       8080;
            server_name *.dev;
			
            root /Users/stephenmccurry/Documents/workspace/$server_name/public;

            passenger_enabled on;

            location / {
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto http;
                proxy_redirect off;
				#               proxy_pass http://127.0.0.1:3000;
				proxy_pass http://localhost:20559;
            }
           location ~* .(eot|ttf|woff)$ {
               add_header Access-Control-Allow-Origin *;
           }
    }


    # HTTPS server
    #
        server {
                listen       443 ssl;
                server_name  *.dev;

                root /Users/stephenmccurry/Documents/workspace/$server_name/public;
                passenger_enabled on;

                ssl                  on;
                ssl_certificate      server.crt;
                ssl_certificate_key  server.key;

                ssl_session_timeout  5m;

                ssl_protocols  SSLv2 SSLv3 TLSv1;
                ssl_ciphers  HIGH:!aNULL:!MD5;
                ssl_prefer_server_ciphers   on;
  			  	client_max_body_size 100M;
                
				location / {
                proxy_set_header Host $host;
				proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto https;
                proxy_redirect off;
				#               proxy_pass http://127.0.0.1:3000;
				proxy_pass http://localhost:20559;
                }
               location ~* .(eot|ttf|woff)$ {
                   add_header Access-Control-Allow-Origin *;
               }
        }
}